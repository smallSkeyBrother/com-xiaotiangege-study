一，开篇-集群搭建

1. 下载文件包
wget http://download.redis.io/releases/redis-5.0.8.tar.gz

2. 解压tar包
tar xzvf redis-5.0.8.tar.gz -C /usr/local/redis

3. 安装
make install PREFIX=/usr/local/redis

4. 修改配置文件
(1) 设置绑定ip
bind 10.40.10.223
(2) 设置监听端口
port 7001
(3) 设置进程为后台运行
daemonize yes
(4) 设置运行进程号保存的目录
pidfile "/var/run/redis_7001.pid"
(5) 设置开启集群模式
cluster-enabled yes
(6) 设置集群模式节点文件配置地址（该配置文件，只需要配置文件路径，文件内容有redis自动维护，不需要手动维护）
cluster-config-file "nodes-7001.conf"
(7) 配置持久化文件放置位置
dir /usr/local/redis/data
(8) 其他配置

5. 依次启动所有的节点 ./redis-server /usr/local/redis/redis-cluster/redis-7000/redis.conf

6. 启动集群：./redis-trib.rb create --replicas 1 10.40.10.222:7000 10.40.10.222:7001 10.40.10.222:7002
 10.40.10.222:7003 10.40.10.222:7004 10.40.10.222:7005

7. 操作命令
(1) 连接集群（-c表示连接集群，-h后跟机器ip，-p后跟监听端口）
./redis-cli -c -h 10.40.10.222 -p 7000


二，简介
1. redis (remote dictionary server) 检查，远程字典服务。
2. redis 支持的键值数据类型：
（1）字符串
（2）散列类型<map>
（3）列表类型<list>
（4）集合<set>
（5）有序集合<zset>
3.存储
（1）内存数据库，普通笔记本上操作，每秒可以进行十万次读写
（2）可进行持久化
（3）可设置键值过期时间（Time to live -- ttl）
（4）可设置最大存储空间，超过时可以根据淘汰规则，自动淘汰不需要的kv


三，入门
1. 命令
（1）字符串操作
 set key val
 get key
 keys *
 incr num                   自增
 incrby num 2               自增步长为2
 append key " and str"      在字符串尾部添加
 strlen key                 获取字符串长度
 mset k v  k1 v1            同时设置多个kv
 mget k k1                  同时获取多个kv的值

（2）散列操作<map>
 hset key field value
 hget key field
 hmset key field v field1 v1
 hmget key field field1

（3）列表操作<list>
 lpush key value
 rpush key value

 lpop key
 lpop key

 llen key                   链表长度

（4）集合<set>
 sadd k v
 smembers k

（5）有序集合<zset>--实现方式用散列集和跳表
  zadd k score v

四. 进阶
（1）redis事务
 multi    表示开启事务
 ...      一组命令
 exec     提交命令

  1> redis开启事务，保证一组操作要么都执行，要么都不执行。多个命令会被添加到一个命令队列中去，如果客户端断开连接，没提交
 事务，则会将队列里面的命令清空。
  2> 多个命令中如果有一个命令出现语法错误，则会直接返回失败。（2.6.5版本之前会跳过错误命令继续执行，最后返回ok）
  3> 运行错误时，会跳过运行错误的命令，继续执行，最后返回ok;

（2）设置过期时间
 expire key


五. 持久化
（1）RDB
  1> 通过快照完成
  2> 以下几种情况下对数据进行快照
     a. 根据配置规则进行自动快照
     b. 用户执行save或者bigsave命令
     c. 执行flushall命令
     d. 执行复制
  3> 配置方式
     save 900 1   -- 表示900秒内至少有1个键进行修改，进行数据快照
     save 300 10  -- 表示300秒内至少有10个键进行修改，则快照
     save 60 10000
  4> 快照原理
     a. 由redis主进程fork一个当前进程的子进程进行数据快照
     b. 父进程继续接收客户端的情况命令，子进程将内存里的数据写入硬盘里的一个临时文件中
     c. 当子进程写完数据后，会用临时文件替换掉旧的rdb文件，到此一次快照完成。
  5> redis启动时，会读取rdb文件进行数据恢复
  6> 当机器宕机时，因为rdb存在时间延迟，所以会存在上一次快照完成后的部分数据的丢失。

（2）AOF
  1> 命令日志的方式记录client的命令
  2> 写日志的方式 a. 每秒同步写； b. 每一个命令同步写；c.交个系统，30秒刷新一次硬盘缓存到硬盘，效率性能最好；但是
如果系统宕机，会导致较多的数据丢失。
  3> 默认是没有开启的，使用配置： appendonly on 进行开启。

五. 集群



